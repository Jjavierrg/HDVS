name: Upload to DockerHub

on:
  workflow_call:
    inputs:
      ACTION_ENVIRONMENT:
        required: true
        type: string

jobs:
  generate-docker-image:
    runs-on: ubuntu-20.04

    environment: ${{ inputs.ACTION_ENVIRONMENT }}
    steps:
      - name: üìù Set env vars
        run: |
          echo "TAG_VERSION=$(date +'%Y%m%d.%H%M')" >> $GITHUB_ENV
          echo "GIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: üì• Checkout dockerfile-CI
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Dockerfile-CI

      - name: üìÅ Create app directory and move Dockerfile-CI
        run: |
          mkdir -p ./app
          mv Dockerfile-CI ./app/Dockerfile

      - name: üì• Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.ENV_TAG }}-${{ github.sha }}
          path: ./app

      - name: üê≥ Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}

      - name: üê≥ Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.GIT_SHA }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}
            ghcr.io/${{ env.IMAGE_NAME }}:${{ vars.DOCKER_TAG }}
